{
	"id": "36888672b3fee00ad14cf41b8557aa70",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"Counter.sol": {
				"content": "\r\n\r\n\r\n\r\npragma solidity ^0.4.0;\r\n \r\ncontract Counter {\r\n \r\n    uint count = 0;\r\n    address owner; //Let's keep track of the owner\r\n \r\n    function Counter() {\r\n    owner = msg.sender; // We keep the address of the creator\r\n    } \r\n \r\n    function increment() public {\r\n       if (owner == msg.sender) { // We check who calls the function\r\n          count = count + 1;\r\n       }\r\n    }\r\n \r\n    /* used to read the value of count */\r\n    function getCount() constant returns (uint) {\r\n       return count;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Counter.sol": {
				"Counter": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getCount",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "increment",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Counter.sol\":36:514  contract Counter {\r... */\n  mstore(0x40, 0x80)\n    /* \"Counter.sol\":76:77  0 */\n  0x0\n    /* \"Counter.sol\":63:77  uint count = 0 */\n  dup1\n  sstore\n    /* \"Counter.sol\":139:229  function Counter() {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Counter.sol\":139:229  function Counter() {\r... */\n  pop\n    /* \"Counter.sol\":173:183  msg.sender */\n  caller\n    /* \"Counter.sol\":165:170  owner */\n  0x1\n  0x0\n    /* \"Counter.sol\":165:183  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Counter.sol\":36:514  contract Counter {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Counter.sol\":36:514  contract Counter {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0xa87d942c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd09de08a\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Counter.sol\":437:511  function getCount() constant returns (uint) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"Counter.sol\":437:511  function getCount() constant returns (uint) {\r... */\n      pop\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Counter.sol\":239:385  function increment() public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"Counter.sol\":239:385  function increment() public {\r... */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"Counter.sol\":437:511  function getCount() constant returns (uint) {\r... */\n    tag_6:\n        /* \"Counter.sol\":475:479  uint */\n      0x0\n        /* \"Counter.sol\":498:503  count */\n      dup1\n      sload\n        /* \"Counter.sol\":491:503  return count */\n      swap1\n      pop\n        /* \"Counter.sol\":437:511  function getCount() constant returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"Counter.sol\":239:385  function increment() public {\r... */\n    tag_9:\n        /* \"Counter.sol\":290:300  msg.sender */\n      caller\n        /* \"Counter.sol\":281:300  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Counter.sol\":281:286  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Counter.sol\":281:300  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Counter.sol\":277:378  if (owner == msg.sender) { // We check who calls the function\r... */\n      iszero\n      tag_12\n      jumpi\n        /* \"Counter.sol\":366:367  1 */\n      0x1\n        /* \"Counter.sol\":358:363  count */\n      sload(0x0)\n        /* \"Counter.sol\":358:367  count + 1 */\n      add\n        /* \"Counter.sol\":350:355  count */\n      0x0\n        /* \"Counter.sol\":350:367  count = count + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Counter.sol\":277:378  if (owner == msg.sender) { // We check who calls the function\r... */\n    tag_12:\n        /* \"Counter.sol\":239:385  function increment() public {\r... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582042b239d5dddf30e4f4d452998ee2eed829d9604b6d18e5883e6963019d60b6d60029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000805534801561001457600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610123806100656000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063a87d942c14604e578063d09de08a146076575b600080fd5b348015605957600080fd5b506060608a565b6040518082815260200191505060405180910390f35b348015608157600080fd5b5060886093565b005b60008054905090565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141560f5576001600054016000819055505b5600a165627a7a7230582042b239d5dddf30e4f4d452998ee2eed829d9604b6d18e5883e6963019d60b6d60029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x123 DUP1 PUSH2 0x65 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x49 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xA87D942C EQ PUSH1 0x4E JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH1 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x60 PUSH1 0x8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x88 PUSH1 0x93 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0xF5 JUMPI PUSH1 0x1 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 TIMESTAMP 0xb2 CODECOPY 0xd5 0xdd 0xdf ADDRESS 0xe4 DELEGATECALL 0xd4 MSTORE SWAP10 DUP15 0xe2 0xee 0xd8 0x29 0xd9 PUSH1 0x4B PUSH14 0x18E5883E6963019D60B6D6002900 ",
							"sourceMap": "36:478:0:-;;;76:1;63:14;;139:90;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:90:0;173:10;165:5;;:18;;;;;;;;;;;;;;;;;;36:478;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063a87d942c14604e578063d09de08a146076575b600080fd5b348015605957600080fd5b506060608a565b6040518082815260200191505060405180910390f35b348015608157600080fd5b5060886093565b005b60008054905090565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141560f5576001600054016000819055505b5600a165627a7a7230582042b239d5dddf30e4f4d452998ee2eed829d9604b6d18e5883e6963019d60b6d60029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x49 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xA87D942C EQ PUSH1 0x4E JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH1 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x60 PUSH1 0x8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x88 PUSH1 0x93 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH1 0xF5 JUMPI PUSH1 0x1 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 TIMESTAMP 0xb2 CODECOPY 0xd5 0xdd 0xdf ADDRESS 0xe4 DELEGATECALL 0xd4 MSTORE SWAP10 DUP15 0xe2 0xee 0xd8 0x29 0xd9 PUSH1 0x4B PUSH14 0x18E5883E6963019D60B6D6002900 ",
							"sourceMap": "36:478:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;437:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;437:74:0;;;;;;;;;;;;;;;;;;;;;;;239:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;239:146:0;;;;;;437:74;475:4;498:5;;491:12;;437:74;:::o;239:146::-;290:10;281:19;;:5;;;;;;;;;;;:19;;;277:101;;;366:1;358:5;;:9;350:5;:17;;;;277:101;239:146::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "58200",
								"executionCost": "25383",
								"totalCost": "83583"
							},
							"external": {
								"getCount()": "402",
								"increment()": "20648"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 514,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 36,
									"end": 514,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 36,
									"end": 514,
									"name": "MSTORE"
								},
								{
									"begin": 76,
									"end": 77,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 63,
									"end": 77,
									"name": "DUP1"
								},
								{
									"begin": 63,
									"end": 77,
									"name": "SSTORE"
								},
								{
									"begin": 139,
									"end": 229,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 139,
									"end": 229,
									"name": "POP"
								},
								{
									"begin": 173,
									"end": 183,
									"name": "CALLER"
								},
								{
									"begin": 165,
									"end": 170,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 165,
									"end": 170,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "EXP"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "DUP2"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "SLOAD"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "DUP2"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "MUL"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "NOT"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "AND"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "SWAP1"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "DUP4"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "AND"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "MUL"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "OR"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "SWAP1"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "SSTORE"
								},
								{
									"begin": 165,
									"end": 183,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 514,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 514,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 514,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 514,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 514,
									"name": "CODECOPY"
								},
								{
									"begin": 36,
									"end": 514,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 514,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582042b239d5dddf30e4f4d452998ee2eed829d9604b6d18e5883e6963019d60b6d60029",
									".code": [
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "MSTORE"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "SWAP1"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "DIV"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "AND"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH",
											"value": "A87D942C"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH",
											"value": "D09DE08A"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 514,
											"name": "REVERT"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "JUMPDEST"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "JUMP"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "JUMPDEST"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "DUP3"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "MSTORE"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "SWAP2"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "SWAP2"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "SUB"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "RETURN"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "JUMP"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "STOP"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "JUMPDEST"
										},
										{
											"begin": 475,
											"end": 479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 498,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 503,
											"name": "SLOAD"
										},
										{
											"begin": 491,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 491,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 437,
											"end": 511,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 300,
											"name": "CALLER"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "AND"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "SLOAD"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "EXP"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "DIV"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "AND"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "AND"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "EQ"
										},
										{
											"begin": 277,
											"end": 378,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 378,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 277,
											"end": 378,
											"name": "JUMPI"
										},
										{
											"begin": 366,
											"end": 367,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 358,
											"end": 363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 358,
											"end": 363,
											"name": "SLOAD"
										},
										{
											"begin": 358,
											"end": 367,
											"name": "ADD"
										},
										{
											"begin": 350,
											"end": 355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 350,
											"end": 367,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 367,
											"name": "SWAP1"
										},
										{
											"begin": 350,
											"end": 367,
											"name": "SSTORE"
										},
										{
											"begin": 350,
											"end": 367,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 378,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 277,
											"end": 378,
											"name": "JUMPDEST"
										},
										{
											"begin": 239,
											"end": 385,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getCount()": "a87d942c",
							"increment()": "d09de08a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Counter.sol\":\"Counter\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Counter.sol\":{\"keccak256\":\"0x7aace234bbc60e0c5280605db500b8ff0738b84d8bccc6a1b5946714880f0e97\",\"urls\":[\"bzzr://2e0aa1e958eebd1fcd49b3855098aa8c0af39d463d426513148ab76dc4f8bdc4\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Counter.sol:12:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Counter() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 229,
					"file": "Counter.sol",
					"start": 139
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "Counter.sol:12:5: Warning: No visibility specified. Defaulting to \"public\". \n    function Counter() {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 229,
					"file": "Counter.sol",
					"start": 139
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "Counter.sol:23:5: Warning: No visibility specified. Defaulting to \"public\". \n    function getCount() constant returns (uint) {\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 511,
					"file": "Counter.sol",
					"start": 437
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Counter.sol": {
				"ast": {
					"absolutePath": "Counter.sol",
					"exportedSymbols": {
						"Counter": [
							40
						]
					},
					"id": 41,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "8:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 40,
							"linearizedBaseContracts": [
								40
							],
							"name": "Counter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"name": "count",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "63:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "63:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "76:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 6,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "84:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "84:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "158:71:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 9,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "165:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 10,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "173:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "173:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "165:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "165:18:0"
											}
										]
									},
									"documentation": null,
									"id": 15,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Counter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:0:0"
									},
									"scope": 40,
									"src": "139:90:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "267:118:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 18,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "281:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 19,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "290:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "290:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "281:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 29,
												"nodeType": "IfStatement",
												"src": "277:101:0",
												"trueBody": {
													"id": 28,
													"nodeType": "Block",
													"src": "302:76:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 22,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "350:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 23,
																		"name": "count",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "358:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "366:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "358:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "350:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 27,
															"nodeType": "ExpressionStatement",
															"src": "350:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 31,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "267:0:0"
									},
									"scope": 40,
									"src": "239:146:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "481:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 36,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "498:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 35,
												"id": 37,
												"nodeType": "Return",
												"src": "491:12:0"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "475:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "475:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "474:6:0"
									},
									"scope": 40,
									"src": "437:74:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 41,
							"src": "36:478:0"
						}
					],
					"src": "8:518:0"
				},
				"id": 0
			}
		}
	}
}